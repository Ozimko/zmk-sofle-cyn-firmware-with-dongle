/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        ZonePrintScreen: ZonePrintScreen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(S))>;
            label = "ZONEPRINTSCREEN";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0 1>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <45 46>;
            layers = <0 1>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <14 15>;
            layers = <0 1>;
        };

        slash {
            bindings = <&kp KP_SLASH>;
            key-positions = <38 39>;
            layers = <0 1>;
        };

        backspase {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 19>;
            layers = <0 1>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <20 21 19>;
            layers = <0 1>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <15 16>;
            layers = <0 1>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <40 39>;
            layers = <0 1>;
        };

        l_ {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
            layers = <0 1>;
        };

        r_ {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
            layers = <0 1>;
        };

        l2 {
            bindings = <&mo 2>;
            key-positions = <56 55>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "base";
            bindings = <
&kp GRAVE   &kp N1  &kp N2          &kp N3        &kp N4        &kp N5                              &kp N6  &kp N7   &kp N8           &kp N9     &kp N0    &kp MINUS
&kp TAB     &kp Q   &kp W           &kp E         &kp R         &kp T                               &kp Y   &kp U    &kp I            &kp O      &kp P     &kp EQUAL
&kp ENTER   &kp A   &kp S           &kp D         &kp F         &kp G                               &kp H   &kp J    &kp K            &kp L      &kp SEMI  &kp SQT
&kp ESCAPE  &kp Z   &kp X           &kp C         &kp V         &kp B   &kp ENTER    &kp BACKSPACE  &kp N   &kp M    &kp COMMA        &kp DOT    &kp FSLH  &kp RSHFT
                    &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp LCTRL    &kp SPACE      &mo 1   &kp DEL  &kp PAUSE_BREAK  &kp RCTRL
            >;
        };

        lower_layer {
            display-name = "lower";
            bindings = <
&kp F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                                  &kp F7           &kp F8        &kp F9        &kp F10       &kp F11          &kp F12
&trans  &kp KP_SLASH  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_ASTERISK                                         &kp KP_MINUS     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_PLUS      &kp BACKSPACE
&trans  &kp KP_MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_PLUS                                             &kp KP_ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_NUMBER_0  &kp PIPE
&trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT       &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp KP_SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT       &trans
                      &trans        &trans        &trans        &trans           &trans              &kp LS(FSLH)       &kp SLASH        &kp RETURN    &kp DELETE    &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp LC(LA(LG(KP_NUMBER_1)))  &kp LA(LC(LG(KP_NUMBER_2)))  &kp LA(LC(LG(KP_NUMBER_3)))  &kp LA(LC(LG(KP_NUMBER_4)))  &kp LG(LC(LA(KP_NUMBER_5)))                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                       &trans                       &trans                       &trans                       &trans                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                       &trans                       &trans                       &trans                       &trans                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                       &trans                       &trans                       &trans                       &trans                       &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans                       &trans                       &trans                       &trans                       &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
